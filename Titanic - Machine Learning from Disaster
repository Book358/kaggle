# Titanic - Machine Learning from Disaster
# (Kaggle Competitions)
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
import lightgbm as lgb
from sklearn.metrics import accuracy_score
import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))
import warnings
warnings.simplefilter('ignore')

# 学習用データ
train = pd.read_csv('/kaggle/input/titanic/train.csv')
train.head(3)
train.dtypes

# 性別による生存者数
sns.countplot(x='Sex', hue='Survived', data=train) 

# 年齢による生存者数
fig = sns.FacetGrid(train, col='Survived', hue='Survived', height=4)
fig.map(sns.histplot, 'Age', bins=30, kde=False)

# 乗船料金による生存者数
fig.map(sns.histplot, 'Fare', bins=30, kde=False)

# 兄弟･配偶者の数による生存者数
sns.countplot(x='SibSp', hue='Survived', data=train)
plt.show()

# 両親･子供の数による生存者数
sns.countplot(x='Parch', hue='Survived', data=train)
plt.legend(title='Survived' ,loc='upper right')
plt.show()

# 相関係数
sns.heatmap(train[['Survived','Age','SibSp','Parch','Fare']].corr(), vmax=1, vmin=-1, annot=True)

# 船室等級による生存者数
sns.countplot(x='Pclass', hue='Survived', data=train)
plt.show()

# 乗船した港による生存者数
sns.countplot(x='Embarked', hue='Survived', data=train)
plt.show()

# 欠損値補完
train.isnull().sum()
train['Age']  =  train['Age'].fillna(train['Age'].median())
train['Embarked'] =  train['Embarked'].fillna('NaN')

# One-Hot Encoding
train = pd.get_dummies(train, columns= ["Sex", "Pclass", 'Embarked'], dtype=float)
train.head(3)

# モデル構築
X = train.drop(['PassengerId', 'Age', 'Ticket', 'Fare', 'Cabin', 'Name', 'Survived'], axis=1)
y = train['Survived']
X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, shuffle=True, random_state=0)
params = {
    'boosting_type':'gbdt',
    'objective':'binary',
    'metric':'auc',
    'num_leaves':16,
    'learning_rate':0.1,
    'n_estimators':100000,
    'random_state':0
}
model = lgb.LGBMClassifier(**params)
model.fit(X_train, y_train, eval_set = [(X_train, y_train),(X_val, y_val)], early_stopping_rounds=50)
accuracy_score(y_val, model.predict(X_val))
model.best_iteration_

# 予測
test = pd.read_csv('/kaggle/input/titanic/test.csv')
test = pd.get_dummies(test, columns= ["Sex", "Pclass", 'Embarked'], dtype=float)
test = test.drop(['PassengerId', 'Age', 'Ticket', 'Fare', 'Cabin', 'Name'], axis=1)
test.insert(8, column= 'Embarked_NaN', value= 0)
test.head(3)
pred = model.predict(test)
pred

# 提出ファイルの作成
sub = pd.read_csv('/kaggle/input/titanic/gender_submission.csv')
sub["Survived"] = pred
sub.to_csv("submission.csv", index=False)
sub.head(3)